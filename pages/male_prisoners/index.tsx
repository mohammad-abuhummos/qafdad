import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { getMale, getMaleByCity, getMaleByname, getMalePage } from "../../components/api/male";
import Footer from "../../components/footer";
import News from "../../components/home/news";
import Recent from "../../components/home/recent";
import PriLoadingCard from "../../components/loading/priLoading";
import Navbar from "../../components/navbar";
import PrisonersCard from "../../components/prisoners/prisonersCard";
import TitleWithAction from "../../components/titleWithAction";
import { citys } from "../../helpers/city";


const Home: NextPage = () => {
  const [MaleList, setMaleList] = useState<any>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [lastVisible, setLastVisible] = useState(null);
  const [isValidNewPage, setIsValidNewPage] = useState(true);
  const [q, setQ] = useState<any>(null);
  const [city, setCity] = useState<any>(null);

  useEffect(() => {
    getMaleList();
  }, []);
  useEffect(() => {
    getMaleListByCity();
  }, [city]);

  // Get List
  const getMaleListByName = async () => {
    console.log("q", q);
    if (q != null && q != " " && q.length > 1) {
      setIsValidNewPage(false);
      var list: any = await getMaleByname(q);
      setMaleList(list);
      setIsLoading(false);
    } else {
      getMaleList();
    }
  };

  const getMaleListByCity = async () => {
    console.log("q", q);
    if (city != null) {
      setIsValidNewPage(false);
      var list: any = await getMaleByCity(city);
      setMaleList(list);
      setIsLoading(false);
    } else {
      getMaleList();
    }
  };

  const getMaleList = async () => {
    setIsValidNewPage(true);
    var list = await getMale(setLastVisible);
    setMaleList(list);
    setIsLoading(false);
  };

  const getMaleListPage = async () => {
    setIsLoading(true);
    try {
      var list = await getMalePage(setLastVisible, lastVisible);
      setMaleList([...MaleList, ...list]);
    } catch (error) {
      setIsValidNewPage(false);
    }
    setIsLoading(false);
  };


  return (
    <div >
      <Head>
        <title>الأسرى</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="apple-touch-icon"
          sizes="57x57"
          href="/favicons/apple-icon-57x57.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="60x60"
          href="/favicons/apple-icon-60x60.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="72x72"
          href="/favicons/apple-icon-72x72.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="76x76"
          href="/favicons/apple-icon-76x76.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="114x114"
          href="/favicons/apple-icon-114x114.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="120x120"
          href="/favicons/apple-icon-120x120.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="144x144"
          href="/favicons/apple-icon-144x144.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="152x152"
          href="/favicons/apple-icon-152x152.png"
        />
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/favicons/apple-icon-180x180.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="192x192"
          href="/favicons/android-icon-192x192.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicons/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="96x96"
          href="/favicons/favicon-96x96.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicons/favicon-16x16.png"
        />
        <link rel="manifest" href="/favicons/manifest.json" />
        <meta name="msapplication-TileColor" content="#ffffff" />
        <meta name="msapplication-TileImage" content="/ms-icon-144x144.png" />
        <meta name="theme-color" content="#ffffff" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin=""
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;500;600;700;800;900&display=swap"
          rel="stylesheet"
        />
      </Head>

      <main dir="rtl" className="min-h-[90vh]">
        <Navbar />
        <div className="pt-20 px-7 md:px-[10%]">
          <h1 className="text-2xl font-semibold text-main-900 py-10">الأسرى </h1>

          <div className="pb-20 pt-3">
            <div>
              <div className="block md:flex justify-between items-end">
                <div className="min-w-[30vw] mt-4 flex justify-start items-end gap-4">
                  <div className="w-[80%] ">
                    <label
                      htmlFor="title"
                      className="block text-sm font-medium text-gray-700"
                    >
                      بحث
                    </label>
                    <div className="mt-1">
                      <input
                        onChange={(e) => setQ(e.target.value)}
                        id="title"
                        name="title"
                        type="text"
                        autoComplete="title"
                        className="block w-full appearance-none rounded-md border border-gray-300 px-3 py-2 placeholder-gray-400 shadow-sm focus:border-black focus:outline-none focus:ring-black sm:text-sm"
                      />
                    </div>
                  </div>
                  <button
                    onClick={() => {
                      getMaleListByName();
                    }}
                    className="max-w-[20%] flex w-full justify-center rounded-md border border-transparent bg-main-500/90 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-main-500/80  focus:outline-none focus:ring-2 focus:bg-main-500/90  focus:ring-offset-2"
                  >
                    بحث
                  </button>
                </div>
                {!!q || !!city &&

                <button
                    onClick={() => {
                      setIsLoading(true)
                      setMaleList([])
                      setQ(null)
                      setCity(null)
                      getMaleList()
                    }}
                    className=" max-w-[100%] md:max-w-[20%] mt-4 flex w-full justify-center rounded-md border border-transparent bg-red-800/90 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-red-800/80  focus:outline-none focus:ring-2 focus:bg-main-500/90  focus:ring-offset-2"
                  >
                    الغاء البحث
                  </button>
                }
              </div>
            </div>
            <div className="gap-4 flex flex-col md:flex-row  mt-5">
              {citys.map((c, index) => {
                return (
                  <button
                    onClick={() => setCity(c)}
                    key={`${index}_${c}`}
                    type="button"
                    className={`inline-flex items-center rounded-md border border-main-900/80 bg-white px-4 py-2 text-sm font-medium text-main-500 shadow-sm hover:bg-main-500/90 hover:text-white focus:outline-none focus:ring-2 focus:ring-main-500 focus:ring-offset-2 ${
                      city == c && " bg-main-500/90 text-white"
                    }`}
                  >
                    {c}
                  </button>
                );
              })}
            </div>
          </div>

          {!isLoading && MaleList.length == 0 && (
            <>
              <div className="flex justify-center items-center  text-center mx-auto min-h-[50vh]">
                <div className="text-center ">
                  <div>
                  <Image src="/assets/logo.png" width="100" height="100" />
                  <h1 className="font-bold text-2xl">
                    لم يتم العثور على نتائج
                  </h1>
                  </div>
                </div>
              </div>
            </>
          )}
          <div className="grid lg:grid-cols-3 grid-cols-1 gap-4">
          {MaleList.map((post:any) => {
            return <PrisonersCard
              key={post.id}
            href={`/male_prisoners/show?id=${post.id}`}
            img={post.img}
            name={post.name}
            arrestDate={post.arrestDate}
            dateOfBirth={post.dateOfBirth}
            judgment={post.judgment}
            city={post.city}
            title={post.title}
            description={post.description}
            />
           
          })
          }
          {isLoading && (
              <>
                <PriLoadingCard />
                <PriLoadingCard />
                <PriLoadingCard />
                <PriLoadingCard />
                <PriLoadingCard />
                <PriLoadingCard />
              </>
            )}
          </div>
          
        </div>
        {MaleList.length != 0 &&
          <div>
            {isValidNewPage ? (
                    <button
                      onClick={() => getMaleListPage()}
                      className="max-w-[100%] md:max-w-[30%] mt-10 mb-4 mx-auto flex w-full justify-center rounded-md border border-transparent bg-main-500/90 py-2 px-4 text-sm font-medium text-white shadow-sm hover:bg-main-500/80  focus:outline-none focus:ring-2 focus:bg-main-500/90  focus:ring-offset-2"
                    >
                     اظهار المزيد
                    </button>
                  ) : <h1 className="text-center mt-10">لم يتم العثور على المزيد من النتائج</h1> }
          </div>
        }
      </main>

      <Footer />
    </div>
  );
};

export default Home;
